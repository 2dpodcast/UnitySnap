using System.Collections;
using System.Collections.Generic;
using UnityEngine;
#if UNITY_EDITOR
using UnityEditor;
#endif
using BigfootDS;

namespace BigfootDS {

	[CreateAssetMenu(fileName = "BigfootWebColoursDefault", menuName = "BigfootDS/WebColourDatabase - Default", order = 1)]
	public class BigfootWebColoursDefault : SingletonScriptableObject<BigfootWebColoursDefault> {
		static readonly string[] materialLocation = {"Assets/BigfootDS/_Common/Materials/Basic Colours - Default/"};

		public Material AliceBlue;
		public Material AntiqueWhite;
		public Material Aqua;
		public Material Aquamarine;
		public Material Azure;
		public Material Beige;
		public Material Bisque;
		public Material Black;
		public Material BlanchedAlmond;
		public Material Blue;
		public Material BlueViolet;
		public Material Brown;
		public Material BurlyWood;
		public Material CadetBlue;
		public Material Chartreuse;
		public Material Chocolate;
		public Material Coral;
		public Material CornflowerBlue;
		public Material Cornsilk;
		public Material Crimson;
		public Material Cyan;
		public Material DarkBlue;
		public Material DarkCyan;
		public Material DarkGoldenRod;
		public Material DarkGray;
		public Material DarkGrey;
		public Material DarkGreen;
		public Material DarkKhaki;
		public Material DarkMagenta;
		public Material DarkOliveGreen;
		public Material DarkOrange;
		public Material DarkOrchid;
		public Material DarkRed;
		public Material DarkSalmon;
		public Material DarkSeaGreen;
		public Material DarkSlateBlue;
		public Material DarkSlateGray;
		public Material DarkSlateGrey;
		public Material DarkTurquoise;
		public Material DarkViolet;
		public Material DeepPink;
		public Material DeepSkyBlue;
		public Material DimGray;
		public Material DimGrey;
		public Material DodgerBlue;
		public Material FireBrick;
		public Material FloralWhite;
		public Material ForestGreen;
		public Material Fuchsia;
		public Material Gainsboro;
		public Material GhostWhite;
		public Material Gold;
		public Material GoldenRod;
		public Material Gray;
		public Material Grey;
		public Material Green;
		public Material GreenYellow;
		public Material HoneyDew;
		public Material HotPink;
		public Material IndianRed;
		public Material Indigo;
		public Material Ivory;
		public Material Khaki;
		public Material Lavender;
		public Material LavenderBlush;
		public Material LawnGreen;
		public Material LemonChiffon;
		public Material LightBlue;
		public Material LightCoral;
		public Material LightCyan;
		public Material LightGoldenRodYellow;
		public Material LightGray;
		public Material LightGrey;
		public Material LightGreen;
		public Material LightPink;
		public Material LightSalmon;
		public Material LightSeaGreen;
		public Material LightSkyBlue;
		public Material LightSlateGray;
		public Material LightSlateGrey;
		public Material LightSteelBlue;
		public Material LightYellow;
		public Material Lime;
		public Material LimeGreen;
		public Material Linen;
		public Material Magenta;
		public Material Maroon;
		public Material MediumAquaMarine;
		public Material MediumBlue;
		public Material MediumOrchid;
		public Material MediumPurple;
		public Material MediumSeaGreen;
		public Material MediumSlateBlue;
		public Material MediumSpringGreen;
		public Material MediumTurquoise;
		public Material MediumVioletRed;
		public Material MidnightBlue;
		public Material MintCream;
		public Material MistyRose;
		public Material Moccasin;
		public Material NavajoWhite;
		public Material Navy;
		public Material OldLace;
		public Material Olive;
		public Material OliveDrab;
		public Material Orange;
		public Material OrangeRed;
		public Material Orchid;
		public Material PaleGoldenRod;
		public Material PaleGreen;
		public Material PaleTurquoise;
		public Material PaleVioletRed;
		public Material PapayaWhip;
		public Material PeachPuff;
		public Material Peru;
		public Material Pink;
		public Material Plum;
		public Material PowderBlue;
		public Material Purple;
		public Material RebeccaPurple;
		public Material Red;
		public Material RosyBrown;
		public Material RoyalBlue;
		public Material SaddleBrown;
		public Material Salmon;
		public Material SandyBrown;
		public Material SeaGreen;
		public Material SeaShell;
		public Material Sienna;
		public Material Silver;
		public Material SkyBlue;
		public Material SlateBlue;
		public Material SlateGray;
		public Material SlateGrey;
		public Material Snow;
		public Material SpringGreen;
		public Material SteelBlue;
		public Material Tan;
		public Material Teal;
		public Material Thistle;
		public Material Tomato;
		public Material Turquoise;
		public Material Violet;
		public Material Wheat;
		public Material White;
		public Material WhiteSmoke;
		public Material Yellow;
		public Material YellowGreen;

		public List<Material> materialsDefault;

#if UNITY_EDITOR
        void OnEnable () {
			//Debug.Log ("OnEnable was called for the web colour default SO."); 
			materialsDefault.Clear();
			materialsDefault.Add (AliceBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "AliceBlue" + ".mat", typeof(Material)));
			if (AliceBlue == null) {
				Debug.Log ("Error in finding materials for default web colours SO. Tried searching for " + materialLocation[0] + "AliceBlue" + ".mat");
				return;
			}
			materialsDefault.Add (AntiqueWhite = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "AntiqueWhite" + ".mat", typeof(Material)));
			materialsDefault.Add (Aqua = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Aqua" + ".mat", typeof(Material)));
			materialsDefault.Add (Aquamarine = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Aquamarine" + ".mat", typeof(Material)));
			materialsDefault.Add (Azure = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Azure" + ".mat", typeof(Material)));
			materialsDefault.Add (Beige = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Beige" + ".mat", typeof(Material)));
			materialsDefault.Add (Bisque = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Bisque" + ".mat", typeof(Material)));
			materialsDefault.Add (Black = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Black" + ".mat", typeof(Material)));
			materialsDefault.Add (BlanchedAlmond = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "BlanchedAlmond" + ".mat", typeof(Material)));
			materialsDefault.Add (Blue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Blue" + ".mat", typeof(Material)));
			materialsDefault.Add (BlueViolet = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "BlueViolet" + ".mat", typeof(Material)));
			materialsDefault.Add (Brown = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Brown" + ".mat", typeof(Material)));
			materialsDefault.Add (BurlyWood = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "BurlyWood" + ".mat", typeof(Material)));
			materialsDefault.Add (CadetBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "CadetBlue" + ".mat", typeof(Material)));
			materialsDefault.Add (Chartreuse = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Chartreuse" + ".mat", typeof(Material)));
			materialsDefault.Add (Chocolate = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Chocolate" + ".mat", typeof(Material)));
			materialsDefault.Add (Coral = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Coral" + ".mat", typeof(Material)));
			materialsDefault.Add (CornflowerBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "CornflowerBlue" + ".mat", typeof(Material)));
			materialsDefault.Add (Cornsilk = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Cornsilk" + ".mat", typeof(Material)));
			materialsDefault.Add (Crimson = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Crimson" + ".mat", typeof(Material)));
			materialsDefault.Add (Cyan = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Cyan" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkBlue" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkCyan = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkCyan" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkGoldenRod = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkGoldenRod" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkGray = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkGrey" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkGrey = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkGrey" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkGreen = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkGreen" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkKhaki = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkKhaki" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkMagenta = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkMagenta" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkOliveGreen = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkOliveGreen" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkOrange = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkOrange" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkOrchid = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkOrchid" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkRed = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkRed" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkSalmon = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkSalmon" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkSeaGreen = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkSeaGreen" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkSlateBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkSlateBlue" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkSlateGray = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkSlateGrey" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkSlateGrey = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkSlateGrey" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkTurquoise = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkTurquoise" + ".mat", typeof(Material)));
			materialsDefault.Add (DarkViolet = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DarkViolet" + ".mat", typeof(Material)));
			materialsDefault.Add (DeepPink = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DeepPink" + ".mat", typeof(Material)));
			materialsDefault.Add (DeepSkyBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DeepSkyBlue" + ".mat", typeof(Material)));
			materialsDefault.Add (DimGray = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DimGrey" + ".mat", typeof(Material)));
			materialsDefault.Add (DimGrey = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DimGrey" + ".mat", typeof(Material)));
			materialsDefault.Add (DodgerBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "DodgerBlue" + ".mat", typeof(Material)));
			materialsDefault.Add (FireBrick = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "FireBrick" + ".mat", typeof(Material)));
			materialsDefault.Add (FloralWhite = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "FloralWhite" + ".mat", typeof(Material)));
			materialsDefault.Add (ForestGreen = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "ForestGreen" + ".mat", typeof(Material)));
			materialsDefault.Add (Fuchsia = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Fuchsia" + ".mat", typeof(Material)));
			materialsDefault.Add (Gainsboro = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Gainsboro" + ".mat", typeof(Material)));
			materialsDefault.Add (GhostWhite = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "GhostWhite" + ".mat", typeof(Material)));
			materialsDefault.Add (Gold = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Gold" + ".mat", typeof(Material)));
			materialsDefault.Add (GoldenRod = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "GoldenRod" + ".mat", typeof(Material)));
			materialsDefault.Add (Gray = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Grey" + ".mat", typeof(Material)));
			materialsDefault.Add (Grey = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Grey" + ".mat", typeof(Material)));
			materialsDefault.Add (Green = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Green" + ".mat", typeof(Material)));
			materialsDefault.Add (GreenYellow = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "GreenYellow" + ".mat", typeof(Material)));
			materialsDefault.Add (HoneyDew = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "HoneyDew" + ".mat", typeof(Material)));
			materialsDefault.Add (HotPink = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "HotPink" + ".mat", typeof(Material)));
			materialsDefault.Add (IndianRed = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "IndianRed" + ".mat", typeof(Material)));
			materialsDefault.Add (Indigo = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Indigo" + ".mat", typeof(Material)));
			materialsDefault.Add (Ivory = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Ivory" + ".mat", typeof(Material)));
			materialsDefault.Add (Khaki = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Khaki" + ".mat", typeof(Material)));
			materialsDefault.Add (Lavender = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Lavender" + ".mat", typeof(Material)));
			materialsDefault.Add (LavenderBlush = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LavenderBlush" + ".mat", typeof(Material)));
			materialsDefault.Add (LawnGreen = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LawnGreen" + ".mat", typeof(Material)));
			materialsDefault.Add (LemonChiffon = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LemonChiffon" + ".mat", typeof(Material)));
			materialsDefault.Add (LightBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LightBlue" + ".mat", typeof(Material)));
			materialsDefault.Add (LightCoral = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LightCoral" + ".mat", typeof(Material)));
			materialsDefault.Add (LightCyan = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LightCyan" + ".mat", typeof(Material)));
			materialsDefault.Add (LightGoldenRodYellow = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LightGoldenRodYellow" + ".mat", typeof(Material)));
			materialsDefault.Add (LightGray = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LightGrey" + ".mat", typeof(Material)));
			materialsDefault.Add (LightGrey = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LightGrey" + ".mat", typeof(Material)));
			materialsDefault.Add (LightGreen = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LightGreen" + ".mat", typeof(Material)));
			materialsDefault.Add (LightPink = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LightPink" + ".mat", typeof(Material)));
			materialsDefault.Add (LightSalmon = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LightSalmon" + ".mat", typeof(Material)));
			materialsDefault.Add (LightSeaGreen = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LightSeaGreen" + ".mat", typeof(Material)));
			materialsDefault.Add (LightSkyBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LightSkyBlue" + ".mat", typeof(Material)));
			materialsDefault.Add (LightSlateGray = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LightSlateGrey" + ".mat", typeof(Material)));
			materialsDefault.Add (LightSlateGrey = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LightSlateGrey" + ".mat", typeof(Material)));
			materialsDefault.Add (LightSteelBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LightSteelBlue" + ".mat", typeof(Material)));
			materialsDefault.Add (LightYellow = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LightYellow" + ".mat", typeof(Material)));
			materialsDefault.Add (Lime = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Lime" + ".mat", typeof(Material)));
			materialsDefault.Add (LimeGreen = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "LimeGreen" + ".mat", typeof(Material)));
			materialsDefault.Add (Linen = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Linen" + ".mat", typeof(Material)));
			materialsDefault.Add (Magenta = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Magenta" + ".mat", typeof(Material)));
			materialsDefault.Add (Maroon = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Maroon" + ".mat", typeof(Material)));
			materialsDefault.Add (MediumAquaMarine = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "MediumAquaMarine" + ".mat", typeof(Material)));
			materialsDefault.Add (MediumBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "MediumBlue" + ".mat", typeof(Material)));
			materialsDefault.Add (MediumOrchid = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "MediumOrchid" + ".mat", typeof(Material)));
			materialsDefault.Add (MediumPurple = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "MediumPurple" + ".mat", typeof(Material)));
			materialsDefault.Add (MediumSeaGreen = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "MediumSeaGreen" + ".mat", typeof(Material)));
			materialsDefault.Add (MediumSlateBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "MediumSlateBlue" + ".mat", typeof(Material)));
			materialsDefault.Add (MediumSpringGreen = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "MediumSpringGreen" + ".mat", typeof(Material)));
			materialsDefault.Add (MediumTurquoise = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "MediumTurquoise" + ".mat", typeof(Material)));
			materialsDefault.Add (MediumVioletRed = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "MediumVioletRed" + ".mat", typeof(Material)));
			materialsDefault.Add (MidnightBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "MidnightBlue" + ".mat", typeof(Material)));
			materialsDefault.Add (MintCream = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "MintCream" + ".mat", typeof(Material)));
			materialsDefault.Add (MistyRose = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "MistyRose" + ".mat", typeof(Material)));
			materialsDefault.Add (Moccasin = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Moccasin" + ".mat", typeof(Material)));
			materialsDefault.Add (NavajoWhite = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "NavajoWhite" + ".mat", typeof(Material)));
			materialsDefault.Add (Navy = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Navy" + ".mat", typeof(Material)));
			materialsDefault.Add (OldLace = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "OldLace" + ".mat", typeof(Material)));
			materialsDefault.Add (Olive = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Olive" + ".mat", typeof(Material)));
			materialsDefault.Add (OliveDrab = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "OliveDrab" + ".mat", typeof(Material)));
			materialsDefault.Add (Orange = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Orange" + ".mat", typeof(Material)));
			materialsDefault.Add (OrangeRed = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "OrangeRed" + ".mat", typeof(Material)));
			materialsDefault.Add (Orchid = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Orchid" + ".mat", typeof(Material)));
			materialsDefault.Add (PaleGoldenRod = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "PaleGoldenRod" + ".mat", typeof(Material)));
			materialsDefault.Add (PaleGreen = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "PaleGreen" + ".mat", typeof(Material)));
			materialsDefault.Add (PaleTurquoise = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "PaleTurquoise" + ".mat", typeof(Material)));
			materialsDefault.Add (PaleVioletRed = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "PaleVioletRed" + ".mat", typeof(Material)));
			materialsDefault.Add (PapayaWhip = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "PapayaWhip" + ".mat", typeof(Material)));
			materialsDefault.Add (PeachPuff = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "PeachPuff" + ".mat", typeof(Material)));
			materialsDefault.Add (Peru = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Peru" + ".mat", typeof(Material)));
			materialsDefault.Add (Pink = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Pink" + ".mat", typeof(Material)));
			materialsDefault.Add (Plum = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Plum" + ".mat", typeof(Material)));
			materialsDefault.Add (PowderBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "PowderBlue" + ".mat", typeof(Material)));
			materialsDefault.Add (Purple = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Purple" + ".mat", typeof(Material)));
			materialsDefault.Add (RebeccaPurple = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "RebeccaPurple" + ".mat", typeof(Material)));
			materialsDefault.Add (Red = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Red" + ".mat", typeof(Material)));
			materialsDefault.Add (RosyBrown = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "RosyBrown" + ".mat", typeof(Material)));
			materialsDefault.Add (RoyalBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "RoyalBlue" + ".mat", typeof(Material)));
			materialsDefault.Add (SaddleBrown = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "SaddleBrown" + ".mat", typeof(Material)));
			materialsDefault.Add (Salmon = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Salmon" + ".mat", typeof(Material)));
			materialsDefault.Add (SandyBrown = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "SandyBrown" + ".mat", typeof(Material)));
			materialsDefault.Add (SeaGreen = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "SeaGreen" + ".mat", typeof(Material)));
			materialsDefault.Add (SeaShell = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "SeaShell" + ".mat", typeof(Material)));
			materialsDefault.Add (Sienna = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Sienna" + ".mat", typeof(Material)));
			materialsDefault.Add (Silver = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Silver" + ".mat", typeof(Material)));
			materialsDefault.Add (SkyBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "SkyBlue" + ".mat", typeof(Material)));
			materialsDefault.Add (SlateBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "SlateBlue" + ".mat", typeof(Material)));
			materialsDefault.Add (SlateGray = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "SlateGrey" + ".mat", typeof(Material)));
			materialsDefault.Add (SlateGrey = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "SlateGrey" + ".mat", typeof(Material)));
			materialsDefault.Add (Snow = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Snow" + ".mat", typeof(Material)));
			materialsDefault.Add (SpringGreen = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "SpringGreen" + ".mat", typeof(Material)));
			materialsDefault.Add (SteelBlue = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "SteelBlue" + ".mat", typeof(Material)));
			materialsDefault.Add (Tan = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Tan" + ".mat", typeof(Material)));
			materialsDefault.Add (Teal = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Teal" + ".mat", typeof(Material)));
			materialsDefault.Add (Thistle = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Thistle" + ".mat", typeof(Material)));
			materialsDefault.Add (Tomato = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Tomato" + ".mat", typeof(Material)));
			materialsDefault.Add (Turquoise = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Turquoise" + ".mat", typeof(Material)));
			materialsDefault.Add (Violet = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Violet" + ".mat", typeof(Material)));
			materialsDefault.Add (Wheat = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Wheat" + ".mat", typeof(Material)));
			materialsDefault.Add (White = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "White" + ".mat", typeof(Material)));
			materialsDefault.Add (WhiteSmoke = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "WhiteSmoke" + ".mat", typeof(Material)));
			materialsDefault.Add (Yellow = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "Yellow" + ".mat", typeof(Material)));
			materialsDefault.Add (YellowGreen = (Material)AssetDatabase.LoadAssetAtPath(materialLocation[0] + "YellowGreen" + ".mat", typeof(Material)));
		}
#endif
    }
}